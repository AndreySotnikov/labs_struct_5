package ExtSort;

import java.awt.EventQueue;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javax.management.Query.value;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;
import javax.swing.SwingWorker;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author andrey
 */
public class MainFrame extends javax.swing.JFrame {

    private DefaultTableModel model1;
    private DefaultTableModel model2;
    private DefaultTableModel model3;
    public static int nmbtest = 4;
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        model1 = (DefaultTableModel) jTabletime.getModel();
        model2 = (DefaultTableModel) jTablecycle.getModel();
        model3 = (DefaultTableModel) jTablewrite.getModel();
        cnttest.setModel(new SpinnerNumberModel(1, 1, 7, 1));
        spinner.setModel(new SpinnerNumberModel(10,1,10000000,1));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        starttest = new javax.swing.JButton();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTabletime = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTablecycle = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTablewrite = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        input = new javax.swing.JTextArea();
        gen = new javax.swing.JButton();
        startsort = new javax.swing.JButton();
        spinner = new javax.swing.JSpinner();
        lblsize = new javax.swing.JLabel();
        lblinp = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        cnttest = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Внешние сортировки");

        starttest.setText("Начать тест");
        starttest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                starttestActionPerformed(evt);
            }
        });

        jTabletime.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Размер файла", "Случайный файл", "Обратный файл"
            }
        ));
        jScrollPane5.setViewportView(jTabletime);

        jTabbedPane3.addTab("Время выполнения", jScrollPane5);

        jTablecycle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Размер файла", "Случайный файл", "Обратный файл"
            }
        ));
        jScrollPane6.setViewportView(jTablecycle);

        jTabbedPane3.addTab("Количество проходов", jScrollPane6);

        jTablewrite.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Размер файла", "Случайный файл", "Обратный файл"
            }
        ));
        jScrollPane7.setViewportView(jTablewrite);

        jTabbedPane3.addTab("Количество записей последовательности", jScrollPane7);

        output.setEditable(false);
        output.setColumns(20);
        output.setRows(5);
        jScrollPane2.setViewportView(output);

        input.setEditable(false);
        input.setColumns(20);
        input.setRows(5);
        jScrollPane3.setViewportView(input);

        gen.setText("Сгенерировать");
        gen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genActionPerformed(evt);
            }
        });

        startsort.setText("Сортировать");
        startsort.setEnabled(false);
        startsort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startsortActionPerformed(evt);
            }
        });

        spinner.setValue(10);

        lblsize.setText("Размер");

        lblinp.setText("Исходный файл");

        jLabel1.setText("Отсортированный файл");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblsize)
                        .addGap(18, 18, 18)
                        .addComponent(spinner))
                    .addComponent(gen, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                    .addComponent(startsort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblinp)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(44, 44, 44))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(84, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblsize))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(startsort)
                        .addGap(0, 170, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblinp)
                            .addComponent(jLabel1))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addComponent(jScrollPane2))))
                .addContainerGap())
        );

        jTabbedPane3.addTab("Тест алгоритма", jPanel1);

        cnttest.setValue(1);

        jLabel2.setText("Кол-во тестов");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cnttest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(starttest)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(starttest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cnttest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void starttestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_starttestActionPerformed
        SwingWorker swg = new SwingWorker() {

            public int doTest(Work w, int size, int i, int percent) throws IOException {
                long st, fn;
                Info inf = new Info();
                model1.setValueAt(Integer.toString(size), i, 0);
                model2.setValueAt(Integer.toString(size), i, 0);
                model3.setValueAt(Integer.toString(size), i, 0);

                w.randomfile("test1.txt", size);

                st = System.currentTimeMillis();
                w.Sort("test1.txt", inf);
                fn = System.currentTimeMillis();

                percent += 100 / (2 * nmbtest);
                progressBar.setValue(percent);

                model1.setValueAt(Long.toString(fn - st), i, 1);
                model2.setValueAt(Integer.toString(inf.count), i, 1);
                model3.setValueAt(Integer.toString(inf.write), i, 1);

                File file = new File("test1.txt");
                file.delete();

                w.reversefile("test1.txt", size);

                st = System.currentTimeMillis();
                w.Sort("test1.txt", inf);
                fn = System.currentTimeMillis();

                percent += 100 / (2 * nmbtest);
                progressBar.setValue(percent);

                model2.setValueAt(Integer.toString(inf.count), i, 2);
                model1.setValueAt(Long.toString(fn - st), i, 2);
                model3.setValueAt(Integer.toString(inf.write), i, 2);

                file = new File("test1.txt");
                file.delete();
                return percent;
            }

            public int doSomeWork() {
                nmbtest = (int) cnttest.getValue();
                while (model1.getRowCount() > 0) {
                    model1.removeRow(0);
                }
                while (model2.getRowCount() > 0) {
                    model2.removeRow(0);
                }
                while (model3.getRowCount() > 0) {
                    model3.removeRow(0);
                }
                model1.setRowCount(nmbtest);
                model2.setRowCount(nmbtest);
                model3.setRowCount(nmbtest);
                progressBar.setMinimum(0);
                progressBar.setMaximum(100 / (2 * nmbtest) * (2 * nmbtest));
                int percent = 0;
                progressBar.setValue(percent);
                Work w = new Work();
                if (nmbtest == 1) {
                    try {
                        String s;
                        s = JOptionPane.showInputDialog("Размер файла для тестирования");
                        int size = Integer.parseInt(s);
                        
                        doTest(w, size, 0, percent);
                    } catch (IOException ex) {
                        Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                    } catch(NumberFormatException ex){
                        JOptionPane.showMessageDialog(null, "Неверный размер файла");
                    }

                } else {
                    int size=1;
                    for (int i = 0; i < nmbtest; i++) {
                        try {
                            //int size = (int) Math.pow(10, i + 1);
                            size *= 10;

                            percent = doTest(w, size, i, percent);
                        } catch (IOException ex) {
                            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
                return 1;
            }

            @Override
            protected Object doInBackground() throws Exception {
                return new Integer(doSomeWork());
            }

        };
        swg.execute();

    }//GEN-LAST:event_starttestActionPerformed

    private void genActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genActionPerformed
        try {
            input.setText("");
            Work work = new Work();
            Info inf = new Info();
            work.randomfile("random.txt", (int)spinner.getValue());
            RandomAccessFile file = new RandomAccessFile("random.txt", "r");
            for (int i = 0; i < file.length() / 4; i++) {
                input.append(Integer.toString(file.readInt()) + "\n");
            }
            file.close();
            startsort.setEnabled(true);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_genActionPerformed

    private void startsortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startsortActionPerformed
        try {
            Work work = new Work();
            Info inf = new Info();
            RandomAccessFile file;
            work.Sort("random.txt", inf);
            //File fl = new File("random.txt");
            file = new RandomAccessFile("random.txt", "r");
            output.setText("");
            for (int i = 0; i < file.length() / 4; i++) {
                output.append(Integer.toString(file.readInt()) + "\n");
            }
            file.close();
            File f = new File("random.txt");
            f.delete();      
            startsort.setEnabled(false);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_startsortActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner cnttest;
    private javax.swing.JButton gen;
    private javax.swing.JTextArea input;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTable jTablecycle;
    private javax.swing.JTable jTabletime;
    private javax.swing.JTable jTablewrite;
    private javax.swing.JLabel lblinp;
    private javax.swing.JLabel lblsize;
    private javax.swing.JTextArea output;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JSpinner spinner;
    private javax.swing.JButton startsort;
    private javax.swing.JButton starttest;
    // End of variables declaration//GEN-END:variables
}
